<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kosa.myapp.IEmpRepository">

	<resultMap type="com.kosa.myapp.EmpVO" id="empMap">
		<result column="EMPLOYEE_ID" property="employeeId" />
		<result column="LAST_NAME" property="lastName" />
		<result column="EMAIL" property="email" />
		<result column="PHONE_NUMBER" property="phoneNumber" />
		<result column="HIRE_DATE" property="hireDate" />
		<result column="JOB_ID" property="jobId" />
		<result column="SALARY" property="salary" />
		<result column="COMMISSION_PCT" property="commissionPct" />
		<result column="MANAGER_ID" property="managerId" />
		<result column="DEPARTMENT_ID" property="departmentId" />
	</resultMap>

	<select id="getEmpCount" parameterType="int" resultType="int">
		select count(*) from employees where department_id=#{deptid}
		<if test="deptid!= null">
			where department_id=#{deptid}
		</if>
	</select>
	
	<select id="getEmpList" resultMap="empMap">
		select * from employees
	</select>

	<select id="getEmpInfo" parameterType="int"
		resultType="com.kosa.myapp.EmpVO">
		SELECT EMPLOYEE_ID AS employeeId,
		FIRST_NAME AS firstName,
		LAST_NAME AS lastName,
		EMAIL AS email,
		PHONE_NUMBER AS phoneNumber,
		HIRE_DATE AS hireDate,
		JOB_ID AS jobId,
		SALARY AS salary,
		COMMISSION_PCT
		AS commissionPct,
		MANAGER_ID AS managerId,
		DEPARTMENT_ID AS departmentId
		FROM EMPLOYEES WHERE EMPLOYEE_ID = #{empid}
	</select>

	<update id="updateEmp" parameterType="com.kosa.myapp.EmpVO">
		update employees
		set first_name=#{firstName}, last_name=#{lastName},email=#{email},
		phone_number=#{phoneNumber},hire_date=#{hireDate},job_id=#{jobId}, <!-- 여기고침 -->
		salary=#{salary},commission_pct=#{commissionPct},manager_id=#{managerId},
		department_id=#{departmentId}
		where employee_id=#{employeeId}
	</update>

	<insert id="insertEmp" parameterType="com.kosa.myapp.EmpVO">
		insert into employees (employee_id, first_name,
		last_name, email, phone_number, hire_date, job_id,
		salary, commission_pct, manager_id, department_id)
		values(#{employeeId},#{firstName},#{lastName},#{email},#{phoneNumber},#{hireDate},#{jobId},#{salary},
		#{commissionPct},#{managerId},#{departmentId})
	</insert>

	<delete id="deleteEmp">
		delete from employees
		where EMPLOYEE_ID=#{empid} and email=#{email}
	</delete>

	<select id="deleteJobHistory" parameterType="int">
		DELETE FROM JOB_HISTORY
		WHERE EMPLOYEE_ID=#{empid}
	</select>

	<select id="getAllJobId" resultType="hashmap">
		select job_id as "jobId", job_title as "title" <!-- title이라고햇네 -->
		from jobs
	</select>

	<select id="getAllManagerId" resultType="hashmap">
		SELECT
		D.MANAGER_ID AS "managerId",
		E.FIRST_NAME AS "firstName"
		FROM DEPARTMENTS D JOIN EMPLOYEES E
		ON D.MANAGER_ID = E.EMPLOYEE_ID
		ORDER BY D.MANAGER_ID
	</select>

	<select id="getAllDeptId" resultType="hashmap">
		SELECT
		DEPARTMENT_ID AS "departmentId",
		DEPARTMENT_NAME AS "departmentName"
		FROM DEPARTMENTS
	</select>
</mapper>